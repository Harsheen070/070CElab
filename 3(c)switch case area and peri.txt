#include <stdio.h>
#include <math.h>

// Function heading
void calculate_area_perimeter() {
    // Variable declaration
    int n, length, breadth, side, radius;
    float area, perimeter;

    // Menu for user input
    printf("Enter your choice:\n1. for area of circle\n2. for area of rectangle\n3. for area of square\n");
    scanf("%d", &n);

    switch (n) {
        case 1:
            // Input statements
            printf("Enter the radius of the circle: ");
            scanf("%d", &radius);

            // Formulas for area and perimeter
            area = 3.14159 * pow(radius, 2);
            perimeter = 2 * 3.14159 * radius;

            // Output statements
            printf("Area of the circle = %.2f\n", area);
            printf("Perimeter of the circle = %.2f\n", perimeter);
            break;

        case 2:
            // Input statements
            printf("Enter the length of the rectangle: ");
            scanf("%d", &length);

            printf("Enter the breadth of the rectangle: ");
            scanf("%d", &breadth);

            // Formulas for area and perimeter
            area = length * breadth;
            perimeter = 2 * (length + breadth);

            // Output statements
            printf("Area of the rectangle = %.2f\n", area);
            printf("Perimeter of the rectangle = %.2f\n", perimeter);
            break;

        case 3:
            // Input statement
            printf("Enter the side of the square: ");
            scanf("%d", &side);

            // Formulas for area and perimeter
            area = pow(side, 2);
            perimeter = 4 * side;

            // Output statements
            printf("Area of the square = %.2f\n", area);
            printf("Perimeter of the square = %.2f\n", perimeter);
            break;

        default:
            printf("Invalid choice. Please choose 1-3.\n");
            break;
    }
}

// Main function
int main() {
    // Calling the function
    calculate_area_perimeter();
    return 0;
}
