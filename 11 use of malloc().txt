experiment 11: Prog to demonstrate the use of malloc(), calloc(), realloc()and free functions()
#include <stdio.h>
#include <stdlib.h>

int main() {
    int *arr1, *arr2, *arr3;
    int size1 = 5, size2 = 3, newSize = 8;

    // Using malloc() for arr1
    arr1 = (int *)malloc(size1 * sizeof(int));
    if (arr1 == NULL) {
        printf("Memory allocation failed for arr1.\n");
        return 1;
    }
    printf("Memory allocation successful for arr1.\n");

    // Initializing elements of arr1 using a for loop
    for (int i = 0; i < size1; i++) {
        arr1[i] = i; // You can initialize the elements based on your requirements
        printf("%d ", arr1[i]); // Print each element after initialization
    }

    // Using malloc() for arr2
    arr2 = (int *)malloc(size2 * sizeof(int));
    if (arr2 == NULL) {
        printf("Memory allocation failed for arr2.\n");
        free(arr1);  // Free the memory allocated for arr1
        return 1;
    }
    printf("\nMemory allocation successful for arr2.\n");

    // Using realloc() for arr1 to resize it to newSize
    arr3 = (int *)realloc(arr1, newSize * sizeof(int));
    if (arr3 == NULL) {
        printf("Memory reallocation failed for arr3.\n");
        free(arr1);
        free(arr2);
        return 1;
    }
    printf("Memory reallocation successful for arr3.\n");

    // Free allocated memory
    free(arr2);
    free(arr3);

    return 0;
}

